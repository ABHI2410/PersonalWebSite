# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\MinMax.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont
from PyQt5.QtCore import Qt

class Ui_MainWindow():
    def __init__(self,board):
        self.board = board   


    ####################################################################
    #            Setingup the layout of the game                       #
    ####################################################################
    
    def setupUi(self, MainWindow):

        ## Main window setting
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(642, 742)
        MainWindow.setMinimumSize(QtCore.QSize(642, 742))
        MainWindow.setMaximumSize(QtCore.QSize(642, 742))
        MainWindow.setMouseTracking(False)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background:white;")

        ## Centering the window
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        ## new game button
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(55, 630, 145, 41))
        self.pushButton.setMinimumSize(QtCore.QSize(141, 41))
        self.pushButton.setMaximumSize(QtCore.QSize(141, 41))
        self.pushButton.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid transparent;padding: 6px 12px;font-size: 1rem;line-height: 1.5;border-radius: 4px;color: #fff;background-color: #66e;border-color: #66e;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(lambda: self.newgame())

        ## giveup game button
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_1.setGeometry(QtCore.QRect(260, 630, 271, 41))
        self.pushButton_1.setMinimumSize(QtCore.QSize(141, 41))
        self.pushButton_1.setMaximumSize(QtCore.QSize(141, 41))
        self.pushButton_1.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid transparent;padding: 6px 12px;font-size: 1rem;line-height: 1.5;border-radius: 4px;color: #fff;background-color: #B00020;border-color: #B0020;")
        self.pushButton_1.setObjectName("pushButton")
        self.pushButton_1.clicked.connect(lambda: self.giveup())

        ## 0,0 position 
        self.textBrowser = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(20, 30, 201, 171))
        self.textBrowser.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser.setTabletTracking(True)
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser.clicked.connect(lambda:self.humanmove([0,0]))

        ## 0,1 position
        self.textBrowser_2 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(220, 30, 201, 171))
        self.textBrowser_2.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_2.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_2.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_2.clicked.connect(lambda:self.humanmove([0,1]))

        ## 0,2 postion
        self.textBrowser_3 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_3.setGeometry(QtCore.QRect(420, 30, 201, 171))
        self.textBrowser_3.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_3.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.textBrowser_3.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_3.clicked.connect(lambda:self.humanmove([0,2]))

        ## 1,1 position
        self.textBrowser_4 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_4.setGeometry(QtCore.QRect(220, 200, 201, 171))
        self.textBrowser_4.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_4.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_4.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_4.clicked.connect(lambda:self.humanmove([1,1]))

        ## 1,0 position
        self.textBrowser_5 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_5.setGeometry(QtCore.QRect(20, 200, 201, 171))
        self.textBrowser_5.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_5.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.textBrowser_5.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_5.clicked.connect(lambda:self.humanmove([1,0]))

        ## 2,0 position
        self.textBrowser_6 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_6.setGeometry(QtCore.QRect(20, 370, 201, 171))
        self.textBrowser_6.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_6.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.textBrowser_6.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_6.clicked.connect(lambda:self.humanmove([2,0]))

        ## 2,2 position
        self.textBrowser_7 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_7.setGeometry(QtCore.QRect(420, 370, 201, 171))
        self.textBrowser_7.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_7.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.textBrowser_7.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_7.clicked.connect(lambda:self.humanmove([2,2]))

        ## 2,1 position
        self.textBrowser_8 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_8.setGeometry(QtCore.QRect(220, 370, 201, 171))
        self.textBrowser_8.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_8.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.textBrowser_8.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_8.clicked.connect(lambda:self.humanmove([2,1]))

        ## 1,2 position
        self.textBrowser_9 = QtWidgets.QPushButton(self.centralwidget)
        self.textBrowser_9.setGeometry(QtCore.QRect(420, 200, 201, 171))
        self.textBrowser_9.setMinimumSize(QtCore.QSize(201, 171))
        self.textBrowser_9.setMaximumSize(QtCore.QSize(201, 171))
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.textBrowser_9.setStyleSheet("font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;border: 1px solid black;padding: 6px 12px;font-size: 72px;color: #000;background-color: #fff;border-color: #000;")
        self.textBrowser_9.clicked.connect(lambda:self.humanmove([1,2]))

        ## winner declaration 
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_10.setGeometry(QtCore.QRect(20, 550, 601, 61))
        self.textBrowser_10.setMinimumSize(QtCore.QSize(601, 61))
        self.textBrowser_10.setMaximumSize(QtCore.QSize(601, 61))
        self.textBrowser_10.setStyleSheet("border: 0;color: Green;")
        self.textBrowser_10.setObjectName("textBrowser_10")
        ## dificulty slider bar
#         self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
#         self.horizontalSlider.setGeometry(QtCore.QRect(460, 640, 140, 22))
#         self.horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
# "border: 1px solid #bbb;\n"
# "background: white;\n"
# "height: 10px;\n"
# "border-radius: 4px;\n"
# "}\n"
# "\n"
# "QSlider::sub-page:horizontal {\n"
# "background: qlineargradient(x1: 0, y1: 0,    x2: 0, y2: 1,\n"
# "    stop: 0 #66e, stop: 1 #bbf);\n"
# "background: qlineargradient(x1: 0, y1: 0.2, x2: 1, y2: 1,\n"
# "    stop: 0 #bbf, stop: 1 #55f);\n"
# "border: 1px solid #777;\n"
# "height: 10px;\n"
# "border-radius: 4px;\n"
# "}\n"
# "\n"
# "QSlider::add-page:horizontal {\n"
# "background: #fff;\n"
# "border: 1px solid #777;\n"
# "height: 10px;\n"
# "border-radius: 4px;\n"
# "}\n"
# "\n"
# "QSlider::handle:horizontal {\n"
# "background: qlineargradient(x1:0, y1:0, x2:1, y2:1,\n"
# "    stop:0 #eee, stop:1 #ccc);\n"
# "border: 1px solid #777;\n"
# "width: 13px;\n"
# "margin-top: -2px;\n"
# "margin-bottom: -2px;\n"
# "border-radius: 4px;\n"
# "}\n"
# "\n"
# "QSlider::handle:horizontal:hover {\n"
# "background: qlineargradient(x1:0, y1:0, x2:1, y2:1,\n"
# "    stop:0 #fff, stop:1 #ddd);\n"
# "border: 1px solid #444;\n"
# "border-radius: 4px;\n"
# "}\n"
# "\n"
# "QSlider::sub-page:horizontal:disabled {\n"
# "background: #bbb;\n"
# "border-color: #999;\n"
# "}\n"
# "\n"
# "QSlider::add-page:horizontal:disabled {\n"
# "background: #eee;\n"
# "border-color: #999;\n"
# "}\n"
# "\n"
# "QSlider::handle:horizontal:disabled {\n"
# "background: #eee;\n"
# "border: 1px solid #aaa;\n"
# "border-radius: 4px;\n"
# "}")
#         self.horizontalSlider.setMinimum(1)
#         self.horizontalSlider.setMaximum(3)
#         self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
#         self.horizontalSlider.setObjectName("horizontalSlider")

        # self.label = QtWidgets.QLabel(self.centralwidget)
        # self.label.setGeometry(QtCore.QRect(520, 620, 85, 16))
        # self.label.setObjectName("label")

        ## Additional widgets
        MainWindow.setCentralWidget(self.centralwidget)

        ## Menu Bar
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 642, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        ## Status Bar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        # self.horizontalSlider.valueChanged.connect(self.change_level)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        


    # def change_level(self,value):
    #     _translate = QtCore.QCoreApplication.translate
    #     if value == 1:
    #         self.label.setText(_translate("MainWindow", "Easy"))
    #     elif value == 2:
    #         self.label.setText(_translate("MainWindow", "Medium"))
    #     else:
    #         self.label.setText(_translate("MainWindow", "Difficult"))

    ####################################################################
    #            Declaring the winner on the GUI                       #
    ####################################################################
    def declareWinner(self):
        self.textBrowser_10.setText(self.board.winner)
        self.textBrowser_10.setFont(QFont('Arial',24))
        self.textBrowser_10.setAlignment(Qt.AlignCenter)


    ####################################################################
    #            Removing the winner from the GUI                      #
    ####################################################################
    def removeWinner(self):
        self.textBrowser_10.setText('')
        self.textBrowser_10.setFont(QFont('Arial',24))
        self.textBrowser_10.setAlignment(Qt.AlignCenter)


    ####################################################################
    #                           Users move                             #
    ####################################################################
    def humanmove(self,position):
        i = position[0]
        j = position[1]
        if self.board.checkSpaceOnBoard(self.board.board[i][j]):
            self.board.board[i][j] = self.board.human
            self.updateboard()
            self.board.currentPlayer = 'AIPlayer'
            self.aimove()
        

    ####################################################################
    #                    Deciding Computer Move                        #
    ####################################################################
    def aimove(self):
        if self.board.isBoardNotFull():                                 
            if self.board.currentPlayer == 'AIPlayer':                      
                move = self.board.bestMove()
                i = move[0]
                j = move[1]
                self.board.board[i][j] = self.board.ai
                self.board.currentPlayer = 'HumanPlayer'
                self.updateboard()
                result = self.board.checkWinner()                       
                if result != None and result != '':
                    ans = self.board.scores[result]
                    if ans == 1:
                        self.board.winner = 'Winner is X'
                        self.DisableGame()
                    elif ans == -1:
                        self.board.winner = 'Winner is O'
                        self.DisableGame()
                    else:
                        self.board.winner = 'Its a tie' 
                        self.DisableGame()        
                self.declareWinner()



    ####################################################################
    #                      Disabling User Moves                        #
    #################################################################### 
    def DisableGame(self):
        positionOnGui = [[self.textBrowser,self.textBrowser_2,self.textBrowser_3],
                        [self.textBrowser_5,self.textBrowser_4,self.textBrowser_9],
                        [self.textBrowser_6,self.textBrowser_8,self.textBrowser_7]]
        for i in range(len(positionOnGui)):
            for j in range(len(positionOnGui[i])):
                positionOnGui[i][j].setEnabled(False)


    ####################################################################
    #                    Enabling Users Movea                          #
    ####################################################################
    def EnableGame(self):
        positionOnGui = [[self.textBrowser,self.textBrowser_2,self.textBrowser_3],
                        [self.textBrowser_5,self.textBrowser_4,self.textBrowser_9],
                        [self.textBrowser_6,self.textBrowser_8,self.textBrowser_7]]
        for i in range(len(positionOnGui)):
            for j in range(len(positionOnGui[i])):
                positionOnGui[i][j].setEnabled(True)


    ####################################################################
    #            Reflecting Moves on the GUI                           #
    ####################################################################
    def updateboard(self):
        positionOnGui = [[self.textBrowser,self.textBrowser_2,self.textBrowser_3],
                        [self.textBrowser_5,self.textBrowser_4,self.textBrowser_9],
                        [self.textBrowser_6,self.textBrowser_8,self.textBrowser_7]]
        for i in range(len(positionOnGui)):
            for j in range(len(positionOnGui[i])):
                positionOnGui[i][j].setText(self.board.board[i][j])
                positionOnGui[i][j].setFont(QFont('Arial', 72))


    ####################################################################
    #            Giving up game button logic                           #
    ####################################################################
    def giveup(self):
        self.board.winner = 'Winner is X'
        self.declareWinner()
        self.board.currentPlayer = 'HumanPlayer'
        self.DisableGame() 
        

    ####################################################################
    #                    New Game button Login                         #
    ####################################################################
    def newgame(self):
        self.board.board = [
                ['','',''],
                ['','',''],
                ['','',''],
            ] 
        self.removeWinner()
        self.EnableGame()
        self.updateboard()
        self.board.currentPlayer = 'AIPlayer'
        self.aimove()  


    ####################################################################
    #            Selecting Difficult scean of game                     #
    ####################################################################
    def startDifficult(self):
        self.aimove()                                                        
        
    ####################################################################
    #            Starting the game                                     #
    ####################################################################
    def start(self):
        self.startDifficult()
        # while Board.checkWinner() == "":
        #   if Board.currentPlayer == 'AIPlayer':
        #       Board.bestMove()



    ####################################################################
    #            renaming objects on the GUI                           #
    ####################################################################
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tic-Tac-Toe"))
        self.pushButton.setText(_translate("MainWindow", "New Game"))
        self.pushButton_1.setText(_translate("MainWindow","Give up"))
        # self.label.setText(_translate("MainWindow", "Easy"))


